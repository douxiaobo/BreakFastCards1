using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ConsoleApp1;
//
//    var holiday = Holiday.FromJson(jsonString);

namespace ConsoleApp1
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Holiday
    {
        [JsonProperty("code")]
        public long Code { get; set; }

        [JsonProperty("holiday")]
        public Dictionary<string, HolidayValue> HolidayHoliday1 { get; set; }
    }

    public partial class HolidayValue
    {
        [JsonProperty("holiday")]
        public bool Holiday { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("wage")]
        public long Wage { get; set; }

        [JsonProperty("date")]
        public DateTimeOffset Date { get; set; }

        [JsonProperty("rest")]
        public long Rest { get; set; }
    }

    /*
    public partial class Holiday
    {
        public static Holiday FromJson(string json) => JsonConvert.DeserializeObject<Holiday>(json, ConsoleApp1.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Holiday self) => JsonConvert.SerializeObject(self, ConsoleApp1.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
    */
}